# Picom config, stolen in large parts from https://github.com/regolith-linux/regolith-compositor-picom-glx/blob/master/config

# Backend settings
backend = "glx";
glx-no-stencil = true;

# Seems to not provide a performance benefit in most cases, see notes in regolith config
glx-copy-from-front = false;

# Turn this off if weird things break (LLVMpipe)
glx-no-rebind-pixmap = true;

use-damage = true;
xrender-sync-fence = true;

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 7;
# The left offset for shadows. (default -15)
shadow-offset-x = -5;
# The top offset for shadows. (default -15)
shadow-offset-y = -5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.8;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way picom draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'compton'",
    "name *= 'picom'",
    "name *= 'cpt_frame_window'",
    "name *= 'cpt_frame_xcb_window'",
    "name = 'Tuple Host Window'",
    "name *= 'wrapper-2.0'",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g = 'Rofi'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
];

#################################
#
# Opacity
#
#################################

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = true;

# Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.03;
# Do not let dimness adjust based on window opacity.
inactive-dim-fixed = false;
blur:
{
    method = "dual_kawase";
    strength = 3;
}
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
blur-background = true;
# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = false;
# Do not let blur radius adjust based on window opacity.
# blur-background-fixed = false;
blur-background-exclude = [
    "class_g = 'firefox'",
    "window_type = 'dock'",
    "window_type = 'desktop'",
    "name = 'cpt_frame_xcb_window'",
    "name = 'Tuple Host Window'"
];

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 3;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [
    "name *= 'ilia'",
];

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Set VSync.
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;
unredir-if-possible-exclude = [
    "name = 'Tuple Host Window'"
]
# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [
    "name = 'Tuple Host Window'"
];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

# Prevent shadows from drawing across displays.
xinerama-shadow-crop = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
    dock = { shadow = true; }
    dnd = { shadow = false; }
    popup_menu = {
        opacity = 1.0;
        shadow = false;
        fade = false;
    }
    dropdown_menu = {
        opacity = 1.0;
        fade = false;
    };
};
